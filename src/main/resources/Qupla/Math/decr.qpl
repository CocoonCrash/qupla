// returns val - 1

template decr<T> {
  func T decr<T> (T val) {
    halfSum = halfAdd<T>(val, -)
    return halfSum[0 : T]
  }
}

use decr<Trit>, <Tryte>, <Tiny>, <Int>, <Huge>, <Hash>
use decr<Tryte2>, <Tiny2>, <Tiny4>, <Int2>, <Huge2>


test -2 = decr<Tiny>(-1)
test -1 = decr<Tiny>(0)
test 0 = decr<Tiny>(1)
test 1 = decr<Tiny>(2)
test 2 = decr<Tiny>(3)

test -2 = decr<Tiny2>(-1)
test -1 = decr<Tiny2>(0)
test 0 = decr<Tiny2>(1)
test 1 = decr<Tiny2>(2)
test 2 = decr<Tiny2>(3)
