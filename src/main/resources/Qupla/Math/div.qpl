// returns lhs / rhs

template div<T> {
  func T div<T> (T lhs, T rhs) {
    ret = divMod<T>(lhs, rhs)
    return ret[0 : T]
  }

  func T ceilDiv<T> (T lhs, T rhs) {
    ret = ceilDivMod<T>(lhs, rhs)
    return ret[0 : T]
  }

  func T floorDiv<T> (T lhs, T rhs) {
    ret = floorDivMod<T>(lhs, rhs)
    return ret[0 : T]
  }

  func T roundDiv<T> (T lhs, T rhs) {
    ret = roundDivMod<T>(lhs, rhs)
    return ret[0 : T]
  }
}


test  0 = div<Tiny>( 0,  0)

test  0 = div<Tiny>( 0,  1)
//test 0 = div<Tiny>( 1,  0)
test  1 = div<Tiny>( 1,  1)
test  0 = div<Tiny>( 0,  2)
//test 0 = div<Tiny>( 2,  0)
test  0 = div<Tiny>( 1,  2)
test  2 = div<Tiny>( 2,  1)
test  1 = div<Tiny>( 2,  2)

test  0 = div<Tiny>( 0, -1)
//test 0 = div<Tiny>(-1,  0)
test  1 = div<Tiny>(-1, -1)
test  0 = div<Tiny>( 0, -2)
//test 0 = div<Tiny>(-2,  0)
test  0 = div<Tiny>(-1, -2)
test  2 = div<Tiny>(-2, -1)
test  1 = div<Tiny>(-2, -2)

test -1 = div<Tiny>( 1, -1)
test  0 = div<Tiny>( 1, -2)
test -2 = div<Tiny>( 2, -1)
test -1 = div<Tiny>( 2, -2)

test -1 = div<Tiny>(-1,  1)
test  0 = div<Tiny>(-1,  2)
test -2 = div<Tiny>(-2,  1)
test -1 = div<Tiny>(-2,  2)

test  1 = div<Tiny>( 3,  3)
test -1 = div<Tiny>( 3, -3)
test -1 = div<Tiny>(-3,  3)
test  1 = div<Tiny>(-3, -3)
