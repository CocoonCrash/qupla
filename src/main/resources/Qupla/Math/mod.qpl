// returns lhs % rhs

template mod<T> {
  func T mod<T> (T lhs, T rhs) {
    ret = divMod<T>(lhs, rhs)
    return ret[T : T]
  }

  func T ceilMod<T> (T lhs, T rhs) {
    ret = ceilDivMod<T>(lhs, rhs)
    return ret[T : T]
  }

  func T floorMod<T> (T lhs, T rhs) {
    ret = floorDivMod<T>(lhs, rhs)
    return ret[T : T]
  }

  func T roundMod<T> (T lhs, T rhs) {
    ret = roundDivMod<T>(lhs, rhs)
    return ret[T : T]
  }
}


test  0 = mod<Tiny>( 0,  0)

test  0 = mod<Tiny>( 0,  1)
//test 0 = mod<Tiny>( 1,  0)
test  0 = mod<Tiny>( 1,  1)
test  0 = mod<Tiny>( 0,  2)
//test 0 = mod<Tiny>( 2,  0)
test  1 = mod<Tiny>( 1,  2)
test  0 = mod<Tiny>( 2,  1)
test  0 = mod<Tiny>( 2,  2)

test  0 = mod<Tiny>( 0, -1)
//test 0 = mod<Tiny>(-1,  0)
test  0 = mod<Tiny>(-1, -1)
test  0 = mod<Tiny>( 0, -2)
//test 0 = mod<Tiny>(-2,  0)
test -1 = mod<Tiny>(-1, -2)
test  0 = mod<Tiny>(-2, -1)
test  0 = mod<Tiny>(-2, -2)

test  0 = mod<Tiny>( 1, -1)
test  1 = mod<Tiny>( 1, -2)
test  0 = mod<Tiny>( 2, -1)
test  0 = mod<Tiny>( 2, -2)

test  0 = mod<Tiny>(-1,  1)
test -1 = mod<Tiny>(-1,  2)
test  0 = mod<Tiny>(-2,  1)
test  0 = mod<Tiny>(-2,  2)

test  0 = mod<Tiny>( 3,  3)
test  0 = mod<Tiny>( 3, -3)
test  0 = mod<Tiny>(-3,  3)
test  0 = mod<Tiny>(-3, -3)
